// 일정 추가 버튼
- 일정 map에 일정 객체 추가
    각 일정을 식별할 수 있도록 키 부여

    일정ID
    일정날짜
    시작시간(현재시간)
    종료시간(현재시간)
    장소ID(markerId)
    마지막검색어


- 일정 화면에 추가
- 일정 관리 화면을 열어줘야 함
    - 일정 장소
        추가된 장소 목록
    - 일정 날짜
        기본 값
            현재 시간
    - 일정 비용들
        +비용 목록 바인딩 초기화

+ 추가된 일정의 키를 불러오기
+ 추가된 일정의 이벤트 객체를 저장

// 일정 선택 버튼
- 해당 일정의 키 불러오기
- 검색 목록 불러오기
- 시간 불러오기
+ 비용 불러오기
    일정에 해당하는 비용 모두 띄우기
- 해당 버튼의 event 객체를 저장하기

// 장소 검색
- 검색 키워드를 객체에 입력
- 검색 키워드에 대한 결과를 목록 반환

// 장소 선택
- 해당 장소를 화면에 입력
    selectedPlaces의 placeId를 참조
    저장된 event 객체를 불러와서 해당 일정 내용에 바인딩시켜야 함
- 해당 장소를 객체에 입력
    

// 시간 설정
- timepicker 버튼을 눌렀을때
    해당 시간을 객체에 입력
    해당 시간을 화면에 입력
        일정관리
        왼쪽 일정
            lastItineraryEvent


// 비용관리
- 비용 추가
    1. 비용 객체 정보 저장 - 초기화
    비용ID
    항목명
    결제자
    예상 금액
    일정ID

    2. 화면에 추가
    비용 리스트 가장 마지막에 추가
    
- 비용 삭제
    1. 비용 객체 정보 제거
    비용ID로 접근

    2. 화면 삭제
    해당 이벤트의 비용 요소 삭제

- 비용의 각 요소 클릭
    해당 e로 비용 ID 불러오기

    1. span 클릭시
    span visible
    input hidden

    input태그 visible
    span태그 hidden
    
    2. input태그 클릭시
    enter, blur 시
    input태그 hidden
    span태그 visible
    span태그 값 - input value값
        만약 input value가 없다면 항목명, ( 이름 ), 예상 금액
        만약 예상 금액이 있다면, ,000+원
    비용 객체에 입력


- 시간 재정렬(일정 선택시)
    1. 일정을 클릭
    2. 클릭한 일정ID를 미리 저장
    3. 이전 클릭한 일정 List에 해당하는 모든 DOM을 교체
    4. List 안에 있는 요소 중 input 키가 일정 ID인 요소를 찾아서 객체를 event 객체에 저장

- 시간 재정렬(일정 추가시)
    1. 일정 추가 클릭
    2. 이전 클릭한 일정 객체가 존재한다면 해당 List의 모든 DOM을 정렬 교체
    3. 일정 추가하기
    4. 추가한 일정의 ID를 가져와서 객체 저장

- 현재 일정을 삭제한다면 일정관리탭이 꺼짐
    삭제할 일정의 ID와 현재 일정 객체의 ID와 동일하다면 일정관리탭 종료
    
- 추가한 장소가 없을땐 들어갈수업씀